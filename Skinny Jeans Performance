-- Skinny Jeans vs Others (Denim)
with jeans_by_month as
(
select count(fingerprint_id) as jeans_ordered, month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.products` using(sku_id)
left join `nuuly_reporting.fiscal_dates` on ordered_at_date = date
where nuuly_class_name = 'Jeans + Denim' and silhouette is not null
group by 2
)
select case
  when silhouette = 'Skinny' then 'Skinny'
  else 'Non-Skinny'
end as jeans_silhouette, count(fingerprint_id) as num_ordered, jeans_ordered, count(fingerprint_id)/jeans_ordered as pct_of_pants, month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.products` using(sku_id)
left join `nuuly_reporting.fiscal_dates` on ordered_at_date = date
left join jeans_by_month using(month_start_date)
where nuuly_class_name = 'Jeans + Denim' and silhouette is not null
group by 1,3,5
order by 5 desc, 4 desc
;
-- Skinny Jeans vs Others (All)
with jeans_by_month as
(
select count(fingerprint_id) as total_ordered, month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.fiscal_dates` on ordered_at_date = date
group by 2
)
select case
  when silhouette = 'Skinny' then 'Skinny'
  else 'Non-Skinny'
end as jeans_silhouette, count(fingerprint_id) as num_ordered, total_ordered, count(fingerprint_id)/total_ordered as pct_of_all_orders, month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.products` using(sku_id)
left join `nuuly_reporting.fiscal_dates` on ordered_at_date = date
left join jeans_by_month using(month_start_date)
where nuuly_class_name = 'Jeans + Denim' and silhouette is not null
group by 1,3,5
order by 5 desc, 4 desc
;
-- Add age
with jeans_by_month as
(
select count(fingerprint_id) as total_ordered, cast(floor(customer_age/10)*10 as int64) as age_bucket, month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.fiscal_dates` on ordered_at_date = date
left join `nuuly_reporting.customer_profile` using(account_id)
group by 2,3
)
select case
  when silhouette = 'Skinny' then 'Skinny'
  else 'Non-Skinny'
end as jeans_silhouette, count(fingerprint_id) as num_ordered, total_ordered, count(fingerprint_id)/total_ordered as pct_of_all_orders, cast(floor(customer_age/10)*10 as int64) as age_bucket, d.month_start_date
from `nuuly_reporting.orders`, unnest(items)
left join `nuuly_reporting.products` using(sku_id)
left join `nuuly_reporting.fiscal_dates` d on ordered_at_date = date
left join `nuuly_reporting.customer_profile` using(account_id)
left join jeans_by_month j on j.month_start_date = d.month_start_date and age_bucket = cast(floor(customer_age/10)*10 as int64)
where nuuly_class_name = 'Jeans + Denim' and silhouette is not null and cast(floor(customer_age/10)*10 as int64) <= 60 and cast(floor(customer_age/10)*10 as int64) > 10
group by 1,3,5,6
order by 6 desc, 5 desc
